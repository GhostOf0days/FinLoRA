import warnings


warnings.filterwarnings("ignore")

from sklearn.metrics import accuracy_score, f1_score
from datasets import load_dataset, load_from_disk, Dataset
from tqdm import tqdm
import datasets
import torch
import pandas as pd
from torch.utils.data import DataLoader
from functools import partial
from pathlib import Path

dataset_path = {
    "xbrl_tags": "../xbrl/xbrl_xbrl_tags_test.jsonl",
    "xbrl_finer": "../data/test/finer_test.jsonl",
}

labels = ["B-AccrualForEnvironmentalLossContingencies", "B-AcquiredFiniteLivedIntangibleAssetsWeightedAverageUsefulLife", "I-AcquiredFiniteLivedIntangibleAssetsWeightedAverageUsefulLife", "B-AllocatedShareBasedCompensationExpense", "B-AmortizationOfFinancingCosts", "B-AmortizationOfIntangibleAssets", "I-AmortizationOfIntangibleAssets", "B-AntidilutiveSecuritiesExcludedFromComputationOfEarningsPerShareAmount", "I-AntidilutiveSecuritiesExcludedFromComputationOfEarningsPerShareAmount", "B-AreaOfRealEstateProperty", "I-AreaOfRealEstateProperty", "B-AssetImpairmentCharges", "B-BusinessAcquisitionEquityInterestsIssuedOrIssuableNumberOfSharesIssued", "B-BusinessAcquisitionPercentageOfVotingInterestsAcquired", "I-BusinessAcquisitionPercentageOfVotingInterestsAcquired", "B-BusinessCombinationAcquisitionRelatedCosts", "B-BusinessCombinationConsiderationTransferred1", "B-BusinessCombinationContingentConsiderationLiability", "B-BusinessCombinationRecognizedIdentifiableAssetsAcquiredAndLiabilitiesAssumedIntangibleAssetsOtherThanGoodwill", "B-BusinessCombinationRecognizedIdentifiableAssetsAcquiredAndLiabilitiesAssumedIntangibles", "B-CapitalizedContractCostAmortization", "B-CashAndCashEquivalentsFairValueDisclosure", "B-ClassOfWarrantOrRightExercisePriceOfWarrantsOrRights1", "B-CommonStockCapitalSharesReservedForFutureIssuance", "B-CommonStockDividendsPerShareDeclared", "B-CommonStockParOrStatedValuePerShare", "B-CommonStockSharesAuthorized", "I-CommonStockSharesAuthorized", "B-CommonStockSharesOutstanding", "B-ConcentrationRiskPercentage1", "B-ContractWithCustomerLiability", "B-ContractWithCustomerLiabilityRevenueRecognized", "B-CumulativeEffectOfNewAccountingPrincipleInPeriodOfAdoption", "B-DebtInstrumentBasisSpreadOnVariableRate1", "B-DebtInstrumentCarryingAmount", "B-DebtInstrumentConvertibleConversionPrice1", "B-DebtInstrumentFaceAmount", "I-DebtInstrumentFaceAmount", "B-DebtInstrumentFairValue", "B-DebtInstrumentInterestRateEffectivePercentage", "B-DebtInstrumentInterestRateStatedPercentage", "B-DebtInstrumentMaturityDate", "I-DebtInstrumentMaturityDate", "B-DebtInstrumentRedemptionPricePercentage", "B-DebtInstrumentTerm", "I-DebtInstrumentTerm", "B-DebtInstrumentUnamortizedDiscount", "B-DebtWeightedAverageInterestRate", "B-DeferredFinanceCostsGross", "B-DeferredFinanceCostsNet", "B-DefinedBenefitPlanContributionsByEmployer", "B-DefinedContributionPlanCostRecognized", "B-Depreciation", "B-DerivativeFixedInterestRate", "B-DerivativeNotionalAmount", "B-DisposalGroupIncludingDiscontinuedOperationConsideration", "B-EffectiveIncomeTaxRateContinuingOperations", "B-EffectiveIncomeTaxRateReconciliationAtFederalStatutoryIncomeTaxRate", "B-EmployeeServiceShareBasedCompensationNonvestedAwardsTotalCompensationCostNotYetRecognized", "B-EmployeeServiceShareBasedCompensationNonvestedAwardsTotalCompensationCostNotYetRecognizedPeriodForRecognition1", "I-EmployeeServiceShareBasedCompensationNonvestedAwardsTotalCompensationCostNotYetRecognizedPeriodForRecognition1", "B-EmployeeServiceShareBasedCompensationNonvestedAwardsTotalCompensationCostNotYetRecognizedShareBasedAwardsOtherThanOptions", "B-EmployeeServiceShareBasedCompensationTaxBenefitFromCompensationExpense", "B-EquityMethodInvestmentOwnershipPercentage", "I-EquityMethodInvestmentOwnershipPercentage", "B-EquityMethodInvestments", "B-FiniteLivedIntangibleAssetUsefulLife", "I-FiniteLivedIntangibleAssetUsefulLife", "B-GainsLossesOnExtinguishmentOfDebt", "B-Goodwill", "B-GoodwillImpairmentLoss", "B-GuaranteeObligationsMaximumExposure", "B-IncomeLossFromEquityMethodInvestments", "B-IncomeTaxExpenseBenefit", "B-InterestExpense", "B-InterestExpenseDebt", "B-LeaseAndRentalExpense", "B-LesseeOperatingLeaseRenewalTerm", "I-LesseeOperatingLeaseRenewalTerm", "B-LesseeOperatingLeaseTermOfContract", "I-LesseeOperatingLeaseTermOfContract", "B-LettersOfCreditOutstandingAmount", "B-LineOfCredit", "B-LineOfCreditFacilityCommitmentFeePercentage", "B-LineOfCreditFacilityCurrentBorrowingCapacity", "B-LineOfCreditFacilityInterestRateAtPeriodEnd", "B-LineOfCreditFacilityMaximumBorrowingCapacity", "B-LineOfCreditFacilityRemainingBorrowingCapacity", "B-LineOfCreditFacilityUnusedCapacityCommitmentFeePercentage", "B-LongTermDebt", "B-LongTermDebtFairValue", "B-LossContingencyAccrualAtCarryingValue", "B-LossContingencyDamagesSoughtValue", "B-LossContingencyEstimateOfPossibleLoss", "B-LossContingencyPendingClaimsNumber", "I-LossContingencyPendingClaimsNumber", "B-MinorityInterestOwnershipPercentageByNoncontrollingOwners", "B-MinorityInterestOwnershipPercentageByParent", "B-NumberOfOperatingSegments", "B-NumberOfRealEstateProperties", "I-NumberOfRealEstateProperties", "B-NumberOfReportableSegments", "B-OperatingLeaseCost", "B-OperatingLeaseExpense", "B-OperatingLeaseLiability", "B-OperatingLeasePayments", "B-OperatingLeaseRightOfUseAsset", "B-OperatingLeaseWeightedAverageDiscountRatePercent", "B-OperatingLeaseWeightedAverageRemainingLeaseTerm1", "I-OperatingLeaseWeightedAverageRemainingLeaseTerm1", "B-OperatingLeasesRentExpenseNet", "B-OperatingLossCarryforwards", "B-PaymentsToAcquireBusinessesGross", "B-PaymentsToAcquireBusinessesNetOfCashAcquired", "B-PreferredStockDividendRatePercentage", "B-PreferredStockSharesAuthorized", "I-PreferredStockSharesAuthorized", "B-ProceedsFromIssuanceOfCommonStock", "B-PropertyPlantAndEquipmentUsefulLife", "I-PropertyPlantAndEquipmentUsefulLife", "B-PublicUtilitiesRequestedRateIncreaseDecreaseAmount", "B-RelatedPartyTransactionAmountsOfTransaction", "I-RelatedPartyTransactionAmountsOfTransaction", "B-RelatedPartyTransactionExpensesFromTransactionsWithRelatedParty", "I-RelatedPartyTransactionExpensesFromTransactionsWithRelatedParty", "B-RepaymentsOfDebt", "B-RestructuringAndRelatedCostExpectedCost1", "B-RestructuringCharges", "B-RevenueFromContractWithCustomerExcludingAssessedTax", "B-RevenueFromContractWithCustomerIncludingAssessedTax", "B-RevenueFromRelatedParties", "B-RevenueRemainingPerformanceObligation", "B-Revenues", "B-SaleOfStockNumberOfSharesIssuedInTransaction", "I-SaleOfStockNumberOfSharesIssuedInTransaction", "B-SaleOfStockPricePerShare", "B-ShareBasedCompensation", "B-ShareBasedCompensationArrangementByShareBasedPaymentAwardAwardVestingPeriod1", "I-ShareBasedCompensationArrangementByShareBasedPaymentAwardAwardVestingPeriod1", "B-ShareBasedCompensationArrangementByShareBasedPaymentAwardEquityInstrumentsOtherThanOptionsGrantsInPeriod", "I-ShareBasedCompensationArrangementByShareBasedPaymentAwardEquityInstrumentsOtherThanOptionsGrantsInPeriod", "B-ShareBasedCompensationArrangementByShareBasedPaymentAwardEquityInstrumentsOtherThanOptionsGrantsInPeriodWeightedAverageGrantDateFairValue", "B-ShareBasedCompensationArrangementByShareBasedPaymentAwardEquityInstrumentsOtherThanOptionsNonvestedNumber", "B-ShareBasedCompensationArrangementByShareBasedPaymentAwardEquityInstrumentsOtherThanOptionsVestedInPeriodTotalFairValue", "B-ShareBasedCompensationArrangementByShareBasedPaymentAwardNumberOfSharesAuthorized", "I-ShareBasedCompensationArrangementByShareBasedPaymentAwardNumberOfSharesAuthorized", "B-ShareBasedCompensationArrangementByShareBasedPaymentAwardNumberOfSharesAvailableForGrant", "B-ShareBasedCompensationArrangementByShareBasedPaymentAwardOptionsExercisesInPeriodTotalIntrinsicValue", "B-ShareBasedCompensationArrangementByShareBasedPaymentAwardOptionsGrantsInPeriodGross", "B-ShareBasedCompensationArrangementByShareBasedPaymentAwardOptionsGrantsInPeriodWeightedAverageGrantDateFairValue", "B-SharePrice", "B-SharebasedCompensationArrangementBySharebasedPaymentAwardAwardVestingRightsPercentage", "I-SharebasedCompensationArrangementBySharebasedPaymentAwardAwardVestingRightsPercentage", "B-SharebasedCompensationArrangementBySharebasedPaymentAwardExpirationPeriod", "I-SharebasedCompensationArrangementBySharebasedPaymentAwardExpirationPeriod", "B-StockIssuedDuringPeriodSharesNewIssues", "I-StockIssuedDuringPeriodSharesNewIssues", "B-StockRepurchaseProgramAuthorizedAmount1", "B-StockRepurchaseProgramRemainingAuthorizedRepurchaseAmount1", "B-StockRepurchasedAndRetiredDuringPeriodShares", "B-StockRepurchasedDuringPeriodShares", "I-StockRepurchasedDuringPeriodShares", "B-SupplementalInformationForPropertyCasualtyInsuranceUnderwritersPriorYearClaimsAndClaimsAdjustmentExpense", "B-TreasuryStockAcquiredAverageCostPerShare", "B-TreasuryStockSharesAcquired", "I-TreasuryStockSharesAcquired", "B-TreasuryStockValueAcquiredCostMethod", "B-UnrecognizedTaxBenefits", "B-UnrecognizedTaxBenefitsThatWouldImpactEffectiveTaxRate", "I-DeferredFinanceCostsGross", "I-CommonStockParOrStatedValuePerShare", "I-LossContingencyEstimateOfPossibleLoss", "I-DefinedContributionPlanCostRecognized", "I-DebtInstrumentFairValue", "I-ContractWithCustomerLiabilityRevenueRecognized", "I-RevenueRemainingPerformanceObligation", "I-EmployeeServiceShareBasedCompensationNonvestedAwardsTotalCompensationCostNotYetRecognized", "I-DebtInstrumentInterestRateStatedPercentage", "I-OperatingLossCarryforwards", "I-MinorityInterestOwnershipPercentageByNoncontrollingOwners", "I-InterestExpense", "I-LongTermDebt", "I-ShareBasedCompensation", "I-DebtWeightedAverageInterestRate", "I-DebtInstrumentCarryingAmount", "I-DebtInstrumentConvertibleConversionPrice1", "I-IncomeTaxExpenseBenefit", "I-ShareBasedCompensationArrangementByShareBasedPaymentAwardOptionsGrantsInPeriodWeightedAverageGrantDateFairValue", "I-EmployeeServiceShareBasedCompensationNonvestedAwardsTotalCompensationCostNotYetRecognizedShareBasedAwardsOtherThanOptions", "I-EquityMethodInvestments", "I-DebtInstrumentUnamortizedDiscount", "I-GainsLossesOnExtinguishmentOfDebt", "I-ShareBasedCompensationArrangementByShareBasedPaymentAwardNumberOfSharesAvailableForGrant", "I-BusinessCombinationRecognizedIdentifiableAssetsAcquiredAndLiabilitiesAssumedIntangibleAssetsOtherThanGoodwill", "I-PreferredStockDividendRatePercentage", "I-RevenueFromContractWithCustomerIncludingAssessedTax", "I-OperatingLeaseWeightedAverageDiscountRatePercent", "I-LineOfCredit", "I-LineOfCreditFacilityMaximumBorrowingCapacity", "I-EffectiveIncomeTaxRateReconciliationAtFederalStatutoryIncomeTaxRate", "I-LineOfCreditFacilityCommitmentFeePercentage", "I-BusinessCombinationConsiderationTransferred1", "I-CommonStockDividendsPerShareDeclared", "I-DebtInstrumentBasisSpreadOnVariableRate1", "I-DisposalGroupIncludingDiscontinuedOperationConsideration", "I-ShareBasedCompensationArrangementByShareBasedPaymentAwardOptionsGrantsInPeriodGross", "I-CommonStockSharesOutstanding", "I-AmortizationOfFinancingCosts", "I-LineOfCreditFacilityCurrentBorrowingCapacity", "I-TreasuryStockValueAcquiredCostMethod", "I-ShareBasedCompensationArrangementByShareBasedPaymentAwardEquityInstrumentsOtherThanOptionsNonvestedNumber", "I-DebtInstrumentInterestRateEffectivePercentage", "I-SaleOfStockPricePerShare", "I-CapitalizedContractCostAmortization", "I-RestructuringCharges", "I-ShareBasedCompensationArrangementByShareBasedPaymentAwardEquityInstrumentsOtherThanOptionsVestedInPeriodTotalFairValue", "I-AccrualForEnvironmentalLossContingencies", "I-CashAndCashEquivalentsFairValueDisclosure", "I-ProceedsFromIssuanceOfCommonStock", "I-Revenues", "I-BusinessCombinationRecognizedIdentifiableAssetsAcquiredAndLiabilitiesAssumedIntangibles", "I-LettersOfCreditOutstandingAmount", "I-ShareBasedCompensationArrangementByShareBasedPaymentAwardEquityInstrumentsOtherThanOptionsGrantsInPeriodWeightedAverageGrantDateFairValue", "I-OperatingLeasePayments", "I-LineOfCreditFacilityRemainingBorrowingCapacity", "I-PaymentsToAcquireBusinessesGross", "I-TreasuryStockAcquiredAverageCostPerShare", "I-DeferredFinanceCostsNet", "I-StockRepurchaseProgramAuthorizedAmount1", "I-InterestExpenseDebt", "I-ContractWithCustomerLiability", "I-OperatingLeaseExpense", "I-Depreciation", "I-AllocatedShareBasedCompensationExpense", "I-LossContingencyAccrualAtCarryingValue", "I-LineOfCreditFacilityUnusedCapacityCommitmentFeePercentage", "I-SupplementalInformationForPropertyCasualtyInsuranceUnderwritersPriorYearClaimsAndClaimsAdjustmentExpense", "I-OperatingLeaseLiability", "I-RevenueFromRelatedParties", "I-PaymentsToAcquireBusinessesNetOfCashAcquired", "I-BusinessCombinationContingentConsiderationLiability", "I-LossContingencyDamagesSoughtValue", "I-NumberOfOperatingSegments", "I-BusinessAcquisitionEquityInterestsIssuedOrIssuableNumberOfSharesIssued", "I-OperatingLeaseRightOfUseAsset", "I-BusinessCombinationAcquisitionRelatedCosts", "I-UnrecognizedTaxBenefits", "I-GuaranteeObligationsMaximumExposure", "I-RestructuringAndRelatedCostExpectedCost1", "I-DefinedBenefitPlanContributionsByEmployer", "I-OperatingLeaseCost", "I-DerivativeFixedInterestRate", "I-Goodwill", "I-GoodwillImpairmentLoss", "I-CommonStockCapitalSharesReservedForFutureIssuance", "I-StockRepurchasedAndRetiredDuringPeriodShares", "I-EmployeeServiceShareBasedCompensationTaxBenefitFromCompensationExpense", "I-IncomeLossFromEquityMethodInvestments", "I-NumberOfReportableSegments", "I-LongTermDebtFairValue", "I-RepaymentsOfDebt", "I-ConcentrationRiskPercentage1", "I-DebtInstrumentRedemptionPricePercentage", "I-CumulativeEffectOfNewAccountingPrincipleInPeriodOfAdoption", "I-SharePrice", "I-UnrecognizedTaxBenefitsThatWouldImpactEffectiveTaxRate", "I-ShareBasedCompensationArrangementByShareBasedPaymentAwardOptionsExercisesInPeriodTotalIntrinsicValue", "I-EffectiveIncomeTaxRateContinuingOperations", "I-RevenueFromContractWithCustomerExcludingAssessedTax", "I-StockRepurchaseProgramRemainingAuthorizedRepurchaseAmount1", "I-LineOfCreditFacilityInterestRateAtPeriodEnd", "I-ClassOfWarrantOrRightExercisePriceOfWarrantsOrRights1", "I-OperatingLeasesRentExpenseNet", "I-LeaseAndRentalExpense", "I-PublicUtilitiesRequestedRateIncreaseDecreaseAmount", "I-MinorityInterestOwnershipPercentageByParent", "I-AssetImpairmentCharges", "I-DerivativeNotionalAmount", ]

labels = ",".join([x.split("-")[1] for x in labels])

def evaluate_accuracy(out, target):
    correct_count = 0
    for x, y in zip(out, target):
        if y in x:
            correct_count += 1

    accuracy = correct_count / len(out)
    return accuracy


def test_xbrl(args, model, tokenizer, path="finer,", prompt_fun=None):
    batch_size = 2
    results = []
    for data_name in path.split(","):
        if data_name in dataset_path:

            instructions = pd.read_json(path_or_buf=dataset_path[data_name], lines=True)
            instructions = instructions
            instructions = instructions.sample(frac=.05, random_state=42)
            # print(f"\n\nPrompt example:\n{instructions['context'][0]}\n\n")
            context = instructions['context'].tolist()

            total_steps = instructions.shape[0] // batch_size
            print(f"Total len: {len(context)}. Batchsize: {batch_size}. Total steps: {total_steps}")

            out_text_list = []

            for i in tqdm(range(total_steps)):
                tmp_context = context[i * batch_size: min(len(context), (i + 1) * batch_size)]
                tmp_context = ["Here are a list of USGAAP tags: " + labels + "\n" + x for x in tmp_context]
                tmp_context = [x + "Answer:" for x in tmp_context]
                # tmp_context = [utils.add_xml(x, limit=80000) for x in tmp_context]
                tmp_target = instructions['target'].tolist()[i * batch_size: min(len(context), (i + 1) * batch_size)]

                if len(tmp_context) == 0:
                    continue
                tokens = tokenizer(tmp_context, return_tensors='pt', padding=True, max_length=512,
                                   return_token_type_ids=False)
                for k in tokens.keys():
                    tokens[k] = tokens[k].cuda()
                res = model.generate(**tokens, max_new_tokens=60, eos_token_id=tokenizer.eos_token_id, temperature=0.7)
                res_sentences = [tokenizer.decode(i, skip_special_tokens=True) for i in res]
                out_text = ["".join(o.split("\n")[1:]).strip() for o in res_sentences]
                # print(out_text)

                out_text_list += out_text
                # torch.cuda.empty_cache()

            instructions["target"] = instructions["target"]
            target_list = instructions["target"].tolist()
            target_list = [str(x) for x in target_list]

            acc = evaluate_accuracy(out_text_list, target_list)
            print(f"{data_name} Acc: {acc}. ")

            results += [{"acc": acc, "f1": -1}]

    return results
